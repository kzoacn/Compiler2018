
string asciiTable = " !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~";
string int2chr(int x)
{
	if(x >= 32 && x <= 126)
		return asciiTable.substring(x-32, x-32);
	return "";
}

int main()
{
	int l1; int r1;
	int l2; int r2;
	int l3; int r3;
	int i; int j; int k;
	
	l1 = 0 ;
	r1 = 40;
	l2 = 100;
	r2 = 200;
	l3 = 125;
	r3 = 250;
	
	int round = 30;
	
	int ans0 = 0;
	int ans1 = 0;
	int ans2 = 0;
	int ans3 = 0;
	
	for(i=32;i<=126;i++)
		print(int2chr(i));
	
	return 0;
}

/*!! metadata:
=== comment ===
Testcase for Loop Invariant Optimization (also Register Allocation & Inlining) v2
=== is_public ===
True
=== assert ===
output
=== timeout ===
12.0
=== input ===
0 40
100 200
125 250

=== phase ===
optim extended
=== output ===
149D5946 E02C253C C4F9BF25 16EFF2E4
=== exitcode ===
0

!!*/

